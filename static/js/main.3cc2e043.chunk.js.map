{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGallery/ImageGalleryItem.js","components/Button/Button.js","services/fetchImages.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["SearchBar","onSubmit","useState","query","setQuery","className","event","preventDefault","trim","toast","type","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","images","onClick","map","image","src","webformatURL","alt","tags","id","Button","fetchImages","page","a","fetch","response","ok","json","Promise","reject","Error","ImageGallery","setImages","error","setError","pages","setPages","setPage","status","setStatus","autoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","useEffect","then","totalHits","hits","Math","ceil","catch","prevImages","color","height","width","prevPage","message","modalRoot","querySelector","Modal","modalImage","onClose","addEventListener","e","code","createPortal","target","largeImageURL","App","showModal","setShowModal","setModalImage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3cc2e043.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nfunction SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      toast('Write search query');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n          <ImSearch />\n        </button>\n\n        <input\n          value={query}\n          onChange={handleQueryChange}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ images, onClick }) {\n  return images.map(image => (\n    <li className=\"ImageGalleryItem\" key={image.id + image.tags}>\n      <img\n        onClick={() => onClick(image)}\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItemImage\"\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","export default async function fetchImages(query, page) {\n  const response = await fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=22289031-1611b833cc5adb7f34a3078c9&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error('Something went wrong'));\n}\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Button from '../Button';\nimport fetchImages from '../../services/fetchImages';\n\nfunction ImageGallery({ query, onClick }) {\n  const [images, setImages] = useState(null);\n  const [error, setError] = useState(null);\n  const [pages, setPages] = useState(0);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n\n  const resetPage = () => {\n    setPage(1);\n  };\n\n  const autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    if (query) {\n      resetPage();\n      setStatus('pending');\n      fetchImages(query, 1)\n        .then(images => {\n          if (images.totalHits === 0) {\n            throw new Error(`Nothing with name ${query} was not found`);\n          }\n          setImages([...images.hits]);\n          setStatus('resolved');\n          setPages(Math.ceil(images.totalHits / 12));\n          autoScroll();\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (page > 1) {\n      setStatus('more-pending');\n      fetchImages(query, page)\n        .then(images => {\n          setImages(prevImages => [...prevImages, ...images.hits]);\n          setStatus('resolved');\n          autoScroll();\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [page, query]);\n\n  if (status === 'idle') {\n    return <h1>Please, enter something</h1>;\n  }\n\n  if (status === 'pending') {\n    return <Loader type=\"TailSpin\" color=\"#3f51b5\" height={180} width={180} />;\n  }\n\n  if (status === 'more-pending') {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem images={images} onClick={onClick} />\n        </ul>\n        <Loader type=\"TailSpin\" color=\"#3f51b5\" height={180} width={180} />\n      </>\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem images={images} onClick={onClick} />\n        </ul>\n        {pages > page ? (\n          <Button onClick={() => setPage(prevPage => prevPage + 1)} />\n        ) : (\n          <></>\n        )}\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error.message}</h2>;\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGallery;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ modalImage, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n  });\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal\">\n        <img alt={modalImage.tags} src={modalImage.largeImageURL} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nexport default Modal;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport SearchBar from 'components/SearchBar';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n\n  const openModal = modalImage => {\n    setShowModal(true);\n    setModalImage(modalImage);\n  };\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n  };\n\n  return (\n    <div className=\"App\">\n      {showModal && (\n        <Modal modalImage={modalImage} onClose={() => setShowModal(false)} />\n      )}\n      <SearchBar onSubmit={handleFormSubmit} />\n      <ImageGallery query={query} onClick={openModal} />\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}